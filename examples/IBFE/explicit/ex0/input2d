// constants
PI = 3.14159265358979

// physical parameters
MU = 0.01
RHO = 1.0

// grid spacing parameters
MAX_LEVELS = 3   // maximum number of levels in locally refined grid
REF_RATIO  = 4   // refinement ratio between levels

N = 16                                    // coarsest grid spacing
NFINEST = (REF_RATIO^(MAX_LEVELS - 1))*N  // finest   grid spacing
L = 1.0                                   // width of computational domain
M = 2                                     // Lagrangian mesh spacing

quad_type = "QGAUSS"
quad_order = "FORTIETH"
weighting_fcn = "IB_4"
use_consistent_mass_matrix = TRUE

dx = L/NFINEST

VelocityInitialConditions {
   function_0 = "0.0"
   function_1 = "0.0"
}

PressureInitialConditions {
   R = 0.25
   w = 0.0625
   mu = 1.0

   p0_smooth = (mu*PI/(3*w))*(R^2 - (R+w)^3/R)
   p0_sharp = mu*PI*R

// smooth case
// function = "if(sqrt((X0-0.5)^2 + (X1-0.5)^2) < R, (p0_smooth + (mu/R)), if(sqrt((X0-0.5)^2 + (X1-0.5)^2) < R+w, (p0_smooth + (mu/w)*(1/R)*(R+w-sqrt((X0-0.5)^2 + (X1-0.5)^2))), p0_smooth))"

// sharp case
   function = "if(sqrt((X0-0.5)^2 + (X1-0.5)^2) < R, (p0_sharp - mu/(R+w)), if(sqrt((X0-0.5)^2 + (X1-0.5)^2) < R+w, (p0_sharp + (mu/w)*R/(R+w)), p0_sharp)) + if(sqrt((X0-0.5)^2 + (X1-0.5)^2) < R, (p0_smooth + (mu/R)), if(sqrt((X0-0.5)^2 + (X1-0.5)^2) < R+w, (p0_smooth + (mu/w)*(1/R)*(R+w-sqrt((X0-0.5)^2 + (X1-0.5)^2))), p0_smooth))"
}

VelocityBcCoefs_0 {
   acoef_function_0 = "1.0"
   acoef_function_1 = "1.0"
   acoef_function_2 = "1.0"
   acoef_function_3 = "1.0"

   bcoef_function_0 = "0.0"
   bcoef_function_1 = "0.0"
   bcoef_function_2 = "0.0"
   bcoef_function_3 = "0.0"

   gcoef_function_0 = "0.0"
   gcoef_function_1 = "0.0"
   gcoef_function_2 = "0.0"
   gcoef_function_3 = "0.0"
}

VelocityBcCoefs_1 {
   acoef_function_0 = "1.0"
   acoef_function_1 = "1.0"
   acoef_function_2 = "1.0"
   acoef_function_3 = "1.0"

   bcoef_function_0 = "0.0"
   bcoef_function_1 = "0.0"
   bcoef_function_2 = "0.0"
   bcoef_function_3 = "0.0"

   gcoef_function_0 = "0.0"
   gcoef_function_1 = "0.0"
   gcoef_function_2 = "0.0"
   gcoef_function_3 = "0.0"
}

IBFEHierarchyIntegrator {
   start_time            = 0.0e0    // initial simulation time
   end_time              = 3.0e0    // final simulation time
   grow_dt               = 1.1e0    // growth factor for timesteps
   max_integrator_steps  = 10000000 // max number of simulation timesteps
   regrid_interval       = 2
   dt_max = 0.5*dx
   dt_max_time_max = dt_max
   num_cycles = 3
   enable_logging = TRUE
   split_interior_and_bdry_forces = TRUE
}

INSStaggeredHierarchyIntegrator {
   enable_logging = TRUE

   cfl = 0.25

   tag_buffer = 1

   conservation_form = FALSE
   using_vorticity_tagging = FALSE

   output_U = TRUE
   output_P = TRUE
   output_F = TRUE
   output_Omega = TRUE
   output_Div_U = TRUE

   mu  = MU
   rho = RHO

   normalize_pressure = TRUE

   HelmholtzHypreSolver {
      solver_type           = "PCG"
      precond_type          = "Split"
      split_solver_type     = "Jacobi"
      relative_residual_tol = 1.0e-2
      max_iterations        = 100
      enable_logging        = FALSE
   }

   HelmholtzFACSolver {
      max_cycles = 1
      residual_tol = 1.0e-12
      num_pre_sweeps  = 0  // this should always be 0
      num_post_sweeps = 2

      fac_max_cycles = 1
      fac_uses_presmoothing = FALSE
      fac_initial_guess_nonzero = FALSE

      skip_restrict_sol = TRUE
      skip_restrict_residual = FALSE

      ssor_iterations = 1

      coarse_solver_choice = "block_jacobi"
      coarse_solver_tolerance = 1.0e-30
      coarse_solver_max_iterations = 2
      prolongation_method = "CONSTANT_REFINE"
      cf_discretization   = "CONSTANT_REFINE"
   }

   PoissonHypreSolver {
      solver_type           = "PCG"
      precond_type          = "PFMG"
      rap_type              = 0
      relax_type            = 2
      skip_relax            = 1
      num_pre_relax_steps   = 1
      num_post_relax_steps  = 1
      relative_residual_tol = 1.0e-2
      max_iterations        = 100
      enable_logging        = FALSE
   }

   PoissonFACSolver {
      max_cycles = 1
      residual_tol = 1.0e-12
      num_pre_sweeps  = 0  // this should always be 0
      num_post_sweeps = 3

      fac_max_cycles = 1
      fac_uses_presmoothing = FALSE
      fac_initial_guess_nonzero = FALSE

      skip_restrict_sol = TRUE
      skip_restrict_residual = FALSE

      ssor_iterations = 1

      coarse_solver_choice = "hypre"
      coarse_solver_tolerance = 1.0e-12
      coarse_solver_max_iterations = 1
      prolongation_method = "LINEAR_REFINE"
      cf_discretization   = "LINEAR_REFINE"

      hypre_solver {
         solver_type           = "PFMG"
         rap_type              = 0
         relax_type            = 2
         skip_relax            = 1
         num_pre_relax_steps   = 0
         num_post_relax_steps  = 3
         relative_residual_tol = 1.0e-12
         max_iterations        = 1
         enable_logging        = FALSE
      }
   }
}

Main {
// log file parameters
   log_file_name    = "IB2d.log"
   log_all_nodes    = FALSE

// visualization dump parameters
   viz_writer            = "VisIt" , "ExodusII"
   viz_dump_interval     = 1 // NFINEST     // zero to turn off
   viz_dump_dirname      = "viz_IB2d"
   visit_number_procs_per_file = 1

// restart dump parameters
   restart_interval      = 0           // zero to turn off
   restart_write_dirname = "restart_IB2d"

// timer dump parameters
   timer_dump_interval   = 0           // zero to turn off
}

CartesianGeometry {
   domain_boxes = [ (0,0) , (N - 1,N - 1) ]
   x_lo         = 0, 0     // lower end of computational domain.
   x_up         = 1, 1     // upper end of computational domain.
   periodic_dimension = 1, 1
}

GriddingAlgorithm {
   max_levels = MAX_LEVELS           // Maximum number of levels in hierarchy.
   ratio_to_coarser {
      level_1 = REF_RATIO,REF_RATIO  // vector ratio to next coarser level
      level_2 = REF_RATIO,REF_RATIO
      level_3 = REF_RATIO,REF_RATIO
      level_4 = REF_RATIO,REF_RATIO
      level_5 = REF_RATIO,REF_RATIO
   }

   largest_patch_size {
      level_0 =512,512 // largest patch allowed in hierarchy
                       // all finer levels will use same values as level_0...
   }

   smallest_patch_size {
      level_0 = 8, 8 // smallest patch allowed in hierarchy
                       // all finer levels will use same values as level_0...
   }

   proper_nesting_buffer = 1

   allow_patches_smaller_than_ghostwidth = TRUE
   allow_patches_smaller_than_minimum_size_to_prevent_overlaps = TRUE
   coalesce_boxes = TRUE
   extend_tags_to_bdry = FALSE

   check_nonrefined_tags = 'e'
   check_overplapping_patches = 'e'

   efficiency_tolerance   = 0.9e0    // min % of tag cells in new patch level
   combine_efficiency     = 0.9e0    // chop box if sum of volumes of smaller
                                      // boxes < efficiency * vol of large box
}

StandardTagAndInitialize {
   tagging_method = "GRADIENT_DETECTOR"
}

LoadBalancer {
   bin_pack_method     = "SPATIAL"
   max_workload_factor = 1
}

TimerManager{
   print_exclusive = FALSE
   print_total = TRUE
   print_threshold = 0.1

   timer_list = "IBAMR::*::*" , "IBTK::*::*" , "*::*::*"
}

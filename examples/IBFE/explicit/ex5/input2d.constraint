// physical parameters
Re = 200.0
MU = 1.0/Re
RHO = 1.0

// grid spacing parameters
L = 16.0                                       // width of computational domain
MAX_LEVELS = 5                                 // maximum number of levels in locally refined grid
REF_RATIO  = 2                                 // refinement ratio between levels
N = 16                                         // actual    number of grid cells on coarsest grid level
NFINEST = (REF_RATIO^(MAX_LEVELS - 1))*N       // effective number of grid cells on finest   grid level
DX0 = L/N                                      // mesh width on coarsest grid level
DX  = L/NFINEST                                // mesh width on finest   grid level
MFAC = 3.0                                     // ratio of Lagrangian mesh width to Cartesian mesh width
ELEM_TYPE = "TRI3"                             // type of element to use for structure discretization

// solver parameters
USE_IB_DELTA_FUNCTIONS     = FALSE             // whether to use smoothed delta functions to mediate Lagrangian-Eulerian interaction
DELTA_FUNCTION             = "IB_4"            // the type of smoothed delta function to use for Lagrangian-Eulerian interaction
SPLIT_FORCES               = FALSE             // whether to split interior and boundary forces
USE_JUMP_CONDITIONS        = FALSE             // whether to impose pressure jumps at fluid-structure interfaces
USE_CONSISTENT_MASS_MATRIX = TRUE              // whether to use a consistent or lumped mass matrix
USE_FBAR_PROJECTION        = FALSE             // whether to use the F-bar projection method
IB_POINT_DENSITY           = 2.0               // approximate density of IB quadrature points for Lagrangian-Eulerian interaction
SOLVER_TYPE                = "STAGGERED"       // the fluid solver to use (STAGGERED or COLLOCATED)
START_TIME                 = 0.0e0             // initial simulation time
END_TIME                   = 300.0             // final simulation time
GROW_DT                    = 2.0e0             // growth factor for timesteps
NUM_CYCLES                 = 1                 // number of cycles of fixed-point iteration
CONVECTIVE_TS_TYPE         = "ADAMS_BASHFORTH" // convective time stepping type
CONVECTIVE_OP_TYPE         = "PPM"             // convective differencing discretization type
CONVECTIVE_FORM            = "ADVECTIVE"       // how to compute the convective terms
NORMALIZE_PRESSURE         = FALSE             // whether to explicitly force the pressure to have mean zero
CFL_MAX                    = 0.25              // maximum CFL number
DT                         = CFL_MAX*DX/2.0    // maximum timestep size
ERROR_ON_DT_CHANGE         = TRUE              // whether to emit an error message if the time step size changes
VORTICITY_TAGGING          = TRUE              // whether to tag cells for refinement based on vorticity thresholds
TAG_BUFFER                 = 1                 // size of tag buffer used by grid generation algorithm
REGRID_CFL_INTERVAL        = 0.5               // regrid whenever any material point could have moved 0.5 meshwidths since previous regrid
OUTPUT_U                   = TRUE
OUTPUT_P                   = TRUE
OUTPUT_F                   = TRUE
OUTPUT_OMEGA               = TRUE
OUTPUT_DIV_U               = TRUE
ENABLE_LOGGING             = TRUE

// model parameters
USE_CONSTRAINT_METHOD = TRUE
CONSTRAINT_OMEGA = 1.5                // "how hard to push" on the fluid
USE_CONSTRAINT_PROJECTION = TRUE
KAPPA_S = 6.25e1*DX/DT^2

// collocated solver parameters
PROJECTION_METHOD_TYPE = "PRESSURE_UPDATE"
SECOND_ORDER_PRESSURE_UPDATE = TRUE
USE_EXACT_PROJECTION_METHOD = FALSE

VelocityBcCoefs_0 {
   t_half = 0.5
   tau = 0.125

   acoef_function_0 = "1.0"
   acoef_function_1 = "0.0"
   acoef_function_2 = "0.0"
   acoef_function_3 = "0.0"

   bcoef_function_0 = "0.0"
   bcoef_function_1 = "1.0"
   bcoef_function_2 = "1.0"
   bcoef_function_3 = "1.0"

   gcoef_function_0 = "(tanh((t-t_half)/tau)+tanh(t_half/tau))/(1+tanh(t_half/tau))"
   gcoef_function_1 = "0.0"
   gcoef_function_2 = "0.0"
   gcoef_function_3 = "0.0"
}

VelocityBcCoefs_1 {
   acoef_function_0 = "1.0"
   acoef_function_1 = "0.0"
   acoef_function_2 = "1.0"
   acoef_function_3 = "1.0"

   bcoef_function_0 = "0.0"
   bcoef_function_1 = "1.0"
   bcoef_function_2 = "0.0"
   bcoef_function_3 = "0.0"

   gcoef_function_0 = "cos(pi*X_1/16.0)*exp(-2.0*t)"
   gcoef_function_1 = "0.0"
   gcoef_function_2 = "0.0"
   gcoef_function_3 = "0.0"
}

IBHierarchyIntegrator {
   start_time          = START_TIME
   end_time            = END_TIME
   grow_dt             = GROW_DT
   num_cycles          = NUM_CYCLES
   regrid_cfl_interval = REGRID_CFL_INTERVAL
   dt_max              = DT
   error_on_dt_change  = ERROR_ON_DT_CHANGE
   enable_logging      = ENABLE_LOGGING
}

IBFEMethod {
   use_IB_spread_operator     = USE_IB_DELTA_FUNCTIONS
   use_IB_interp_operator     = USE_IB_DELTA_FUNCTIONS
   delta_fcn                  = DELTA_FUNCTION
   split_forces               = SPLIT_FORCES
   use_jump_conditions        = USE_JUMP_CONDITIONS
   use_consistent_mass_matrix = USE_CONSISTENT_MASS_MATRIX
   use_Fbar_projection        = USE_FBAR_PROJECTION
   IB_point_density           = IB_POINT_DENSITY
   constraint_omega           = CONSTRAINT_OMEGA
   use_constraint_projection  = USE_CONSTRAINT_PROJECTION
}

INSCollocatedHierarchyIntegrator {
   mu                            = MU
   rho                           = RHO
   start_time                    = START_TIME
   end_time                      = END_TIME
   grow_dt                       = GROW_DT
   convective_time_stepping_type = CONVECTIVE_TS_TYPE
   convective_op_type            = CONVECTIVE_OP_TYPE
   convective_difference_form    = CONVECTIVE_FORM
   normalize_pressure            = NORMALIZE_PRESSURE
   cfl                           = CFL_MAX
   dt_max                        = DT
   using_vorticity_tagging       = VORTICITY_TAGGING
   vorticity_abs_thresh          = 0.25 , 0.5 , 1 , 2
   tag_buffer                    = TAG_BUFFER
   output_U                      = OUTPUT_U
   output_P                      = OUTPUT_P
   output_F                      = OUTPUT_F
   output_Omega                  = OUTPUT_OMEGA
   output_Div_U                  = OUTPUT_DIV_U
   enable_logging                = ENABLE_LOGGING
   projection_method_type        = PROJECTION_METHOD_TYPE
   use_2nd_order_pressure_update = SECOND_ORDER_PRESSURE_UPDATE
   use_exact_projection_method   = USE_EXACT_PROJECTION_METHOD
}

INSStaggeredHierarchyIntegrator {
   mu                            = MU
   rho                           = RHO
   start_time                    = START_TIME
   end_time                      = END_TIME
   grow_dt                       = GROW_DT
   convective_time_stepping_type = CONVECTIVE_TS_TYPE
   convective_op_type            = CONVECTIVE_OP_TYPE
   convective_difference_form    = CONVECTIVE_FORM
   normalize_pressure            = NORMALIZE_PRESSURE
   cfl                           = CFL_MAX
   dt_max                        = DT
   using_vorticity_tagging       = VORTICITY_TAGGING
   vorticity_abs_thresh          = 0.25 , 0.5 , 1 , 2
   tag_buffer                    = TAG_BUFFER
   output_U                      = OUTPUT_U
   output_P                      = OUTPUT_P
   output_F                      = OUTPUT_F
   output_Omega                  = OUTPUT_OMEGA
   output_Div_U                  = OUTPUT_DIV_U
   enable_logging                = ENABLE_LOGGING
}

Main {
   solver_type = SOLVER_TYPE

// log file parameters
   log_file_name               = "IB2d.log"
   log_all_nodes               = FALSE

// visualization dump parameters
   viz_writer                  = "VisIt" , "ExodusII"
   viz_dump_interval           = NFINEST/4                  // zero to turn off
   viz_dump_dirname            = "viz_IB2d"
   visit_number_procs_per_file = 1

// restart dump parameters
   restart_dump_interval       = 0                          // zero to turn off
   restart_dump_dirname        = "restart_IB2d"

// hierarchy data dump parameters
   data_dump_interval          = 1                          // zero to turn off
   data_dump_dirname           = "hier_data_IB2d"

// timer dump parameters
   timer_dump_interval         = 0                          // zero to turn off
}

CartesianGeometry {
   domain_boxes = [ (0,0) , (2*N - 1,N - 1) ]
   x_lo         = - 0.5*L , - 0.5*L  // lower end of computational domain.
   x_up         =   1.5*L ,   0.5*L  // upper end of computational domain.
   periodic_dimension = 0 , 0
}

GriddingAlgorithm {
   max_levels = MAX_LEVELS           // Maximum number of levels in hierarchy.
   ratio_to_coarser {
      level_1 = REF_RATIO,REF_RATIO  // vector ratio to next coarser level
      level_2 = REF_RATIO,REF_RATIO
      level_3 = REF_RATIO,REF_RATIO
      level_4 = REF_RATIO,REF_RATIO
      level_5 = REF_RATIO,REF_RATIO
      level_6 = REF_RATIO,REF_RATIO
      level_7 = REF_RATIO,REF_RATIO
   }

   largest_patch_size {
      level_0 =512,512 // largest patch allowed in hierarchy
                       // all finer levels will use same values as level_0...
   }

   smallest_patch_size {
      level_0 =  8,  8 // smallest patch allowed in hierarchy
                       // all finer levels will use same values as level_0...
   }

   allow_patches_smaller_than_minimum_size_to_prevent_overlaps = TRUE
   efficiency_tolerance   = 0.80e0    // min % of tag cells in new patch level
   combine_efficiency     = 0.80e0    // chop box if sum of volumes of smaller
                                      // boxes < efficiency * vol of large box
}

StandardTagAndInitialize {
   tagging_method = "GRADIENT_DETECTOR"
}

LoadBalancer {
   bin_pack_method     = "SPATIAL"
   max_workload_factor = 1
}

TimerManager{
   print_exclusive = FALSE
   print_total = TRUE
   print_threshold = 0.1

   timer_list = "IBAMR::*::*" , "IBTK::*::*" , "*::*::*"
}

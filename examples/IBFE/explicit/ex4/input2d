// physical parameters
MU = 0.01
RHO = 1.0

// grid spacing parameters
MAX_LEVELS = 2                            // maximum number of levels in locally refined grid
REF_RATIO  = 2                            // refinement ratio between levels
N = 32                                    // actual    number of grid cells on coarsest grid level
NFINEST = (REF_RATIO^(MAX_LEVELS - 1))*N  // effective number of grid cells on finest   grid level
RFAC = 1                                  // base Lagrangian mesh refinement factor
R = RFAC + int(log(NFINEST)/log(2)) - 5   //      Lagrangian mesh refinement factor
DX = 1.0/NFINEST

// model parameters
elem_type = "QUAD9"
U_MAX = 1.0
struct_mu = 0.1
struct_lambda = 2^(3 - RFAC)*2.5e0*NFINEST/64.0
use_div_penalization = FALSE

// solver parameters
USE_IB_DELTA_FUNCTIONS     = TRUE                  // whether to use smoothed delta functions to mediate Lagrangian-Eulerian interaction
DELTA_FUNCTION             = "IB_4"                // the type of smoothed delta function to use for Lagrangian-Eulerian interaction
SPLIT_FORCES               = TRUE                  // whether to split interior and boundary forces
USE_JUMP_CONDITIONS        = TRUE                  // whether to impose pressure jumps at fluid-structure interfaces
USE_CONSISTENT_MASS_MATRIX = TRUE                  // whether to use a consistent or lumped mass matrix
USE_FBAR_PROJECTION        = FALSE                 // whether to use the F-bar projection method
IB_POINT_DENSITY           = 2.0                   // approximate density of IB quadrature points for Lagrangian-Eulerian interaction
SOLVER_TYPE                = "STAGGERED"           // the fluid solver to use (STAGGERED or COLLOCATED)
START_TIME                 = 0.0e0                 // initial simulation time
END_TIME                   = 20.0                  // final simulation time
GROW_DT                    = 2.0e0                 // growth factor for timesteps
NUM_CYCLES                 = 2                     // number of cycles of fixed-point iteration
CONVECTIVE_OP_TYPE         = "PPM"                 // convective differencing discretization type
CONVECTIVE_FORM            = "ADVECTIVE"           // how to compute the convective terms
NORMALIZE_PRESSURE         = FALSE                 // whether to explicitly force the pressure to have mean zero
CFL_MAX                    = 0.3                   // maximum CFL number
DT                         = 0.5*CFL_MAX*DX/U_MAX  // maximum timestep size
VORTICITY_TAGGING          = FALSE                 // whether to tag cells for refinement based on vorticity thresholds
TAG_BUFFER                 = 1                     // size of tag buffer used by grid generation algorithm
REGRID_CFL_INTERVAL        = 0.5                   // regrid whenever any material point could have moved 0.5 meshwidths since previous regrid
OUTPUT_U                   = TRUE
OUTPUT_P                   = TRUE
OUTPUT_F                   = TRUE
OUTPUT_OMEGA               = TRUE
OUTPUT_DIV_U               = TRUE
ENABLE_LOGGING             = TRUE

// collocated solver parameters
PROJECTION_METHOD_TYPE = "PRESSURE_UPDATE"
SECOND_ORDER_PRESSURE_UPDATE = TRUE
USE_EXACT_PROJECTION_METHOD = FALSE

VelocityBcCoefs_0 {
   acoef_function_0 = "1.0"
   acoef_function_1 = "1.0"
   acoef_function_2 = "1.0"
   acoef_function_3 = "1.0"

   bcoef_function_0 = "0.0"
   bcoef_function_1 = "0.0"
   bcoef_function_2 = "0.0"
   bcoef_function_3 = "0.0"

   gcoef_function_0 = "0.0"
   gcoef_function_1 = "0.0"
   gcoef_function_2 = "0.0"
   gcoef_function_3 = "1.0"
}

VelocityBcCoefs_1 {
   acoef_function_0 = "1.0"
   acoef_function_1 = "1.0"
   acoef_function_2 = "1.0"
   acoef_function_3 = "1.0"

   bcoef_function_0 = "0.0"
   bcoef_function_1 = "0.0"
   bcoef_function_2 = "0.0"
   bcoef_function_3 = "0.0"

   gcoef_function_0 = "0.0"
   gcoef_function_1 = "0.0"
   gcoef_function_2 = "0.0"
   gcoef_function_3 = "0.0"
}

IBHierarchyIntegrator {
   start_time          = START_TIME
   end_time            = END_TIME
   grow_dt             = GROW_DT
   num_cycles          = NUM_CYCLES
   regrid_cfl_interval = REGRID_CFL_INTERVAL
   dt_max              = DT
   enable_logging      = ENABLE_LOGGING
}

IBFEMethod {
   use_IB_spread_operator     = USE_IB_DELTA_FUNCTIONS
   use_IB_interp_operator     = USE_IB_DELTA_FUNCTIONS
   delta_fcn                  = DELTA_FUNCTION
   split_forces               = SPLIT_FORCES
   use_jump_conditions        = USE_JUMP_CONDITIONS
   use_consistent_mass_matrix = USE_CONSISTENT_MASS_MATRIX
   use_Fbar_projection        = USE_FBAR_PROJECTION
   IB_point_density           = IB_POINT_DENSITY
}

INSCollocatedHierarchyIntegrator {
   mu                         = MU
   rho                        = RHO
   start_time                 = START_TIME
   end_time                   = END_TIME
   grow_dt                    = GROW_DT
   convective_op_type         = CONVECTIVE_OP_TYPE
   convective_difference_form = CONVECTIVE_FORM
   normalize_pressure         = NORMALIZE_PRESSURE
   cfl                        = CFL_MAX
   dt_max                     = DT
   using_vorticity_tagging    = VORTICITY_TAGGING
   vorticity_rel_thresh       = 0.25 , 0.125
   tag_buffer                 = TAG_BUFFER
   output_U                   = OUTPUT_U
   output_P                   = OUTPUT_P
   output_F                   = OUTPUT_F
   output_Omega               = OUTPUT_OMEGA
   output_Div_U               = OUTPUT_DIV_U
   enable_logging             = ENABLE_LOGGING

   projection_method_type        = PROJECTION_METHOD_TYPE
   use_2nd_order_pressure_update = SECOND_ORDER_PRESSURE_UPDATE
   use_exact_projection_method   = USE_EXACT_PROJECTION_METHOD

   VelocityHypreSolver {
      solver_type           = "PFMG"
      rap_type              = 0
      relax_type            = 2
      skip_relax            = 1
      num_pre_relax_steps   = 2
      num_post_relax_steps  = 2
      relative_residual_tol = 1.0e-12
      max_iterations        = 1
      enable_logging        = FALSE
   }

   VelocityFACSolver {
      num_pre_sweeps  = 0
      num_post_sweeps = 1
      coarse_solver_choice = "hypre"
      coarse_solver_tolerance = 1.0e-12
      coarse_solver_max_iterations = 1
      prolongation_method = "LINEAR_REFINE"
      restriction_method  = "CONSERVATIVE_COARSEN"
      hypre_solver {
         solver_type           = "PFMG"
         rap_type              = 0
         relax_type            = 2
         skip_relax            = 1
         num_pre_relax_steps   = 0
         num_post_relax_steps  = 3
         relative_residual_tol = 1.0e-12
         max_iterations        = 1
         enable_logging        = FALSE
      }
   }

   PressureHypreSolver {
      solver_type           = "PFMG"
      rap_type              = 0
      relax_type            = 2
      skip_relax            = 1
      num_pre_relax_steps   = 2
      num_post_relax_steps  = 2
      relative_residual_tol = 1.0e-2
      max_iterations        = 100
      enable_logging        = FALSE
   }

   PressureFACSolver {
      num_pre_sweeps  = 0
      num_post_sweeps = 3
      coarse_solver_choice = "hypre"
      coarse_solver_tolerance = 1.0e-12
      coarse_solver_max_iterations = 1
      prolongation_method = "LINEAR_REFINE"
      restriction_method  = "CONSERVATIVE_COARSEN"
      hypre_solver {
         solver_type           = "PFMG"
         rap_type              = 0
         relax_type            = 2
         skip_relax            = 1
         num_pre_relax_steps   = 0
         num_post_relax_steps  = 3
         relative_residual_tol = 1.0e-12
         max_iterations        = 1
         enable_logging        = FALSE
      }
   }
}

INSStaggeredHierarchyIntegrator {
   mu                         = MU
   rho                        = RHO
   start_time                 = START_TIME
   end_time                   = END_TIME
   grow_dt                    = GROW_DT
   convective_op_type         = CONVECTIVE_OP_TYPE
   convective_difference_form = CONVECTIVE_FORM
   normalize_pressure         = NORMALIZE_PRESSURE
   cfl                        = CFL_MAX
   dt_max                     = DT
   using_vorticity_tagging    = VORTICITY_TAGGING
   vorticity_rel_thresh       = 0.25 , 0.125
   tag_buffer                 = TAG_BUFFER
   output_U                   = OUTPUT_U
   output_P                   = OUTPUT_P
   output_F                   = OUTPUT_F
   output_Omega               = OUTPUT_OMEGA
   output_Div_U               = OUTPUT_DIV_U
   enable_logging             = ENABLE_LOGGING

   VelocityHypreSolver {
      solver_type           = "Split"
      split_solver_type     = "PFMG"
      relative_residual_tol = 1.0e-12
      max_iterations        = 1
      enable_logging        = FALSE
   }

   VelocityFACSolver {
      num_pre_sweeps  = 0
      num_post_sweeps = 1
      coarse_solver_choice = "hypre"
      coarse_solver_tolerance = 1.0e-12
      coarse_solver_max_iterations = 1
      prolongation_method = "CONSTANT_REFINE"
      restriction_method  = "CONSERVATIVE_COARSEN"
      hypre_solver {
         solver_type           = "Split"
         split_solver_type     = "PFMG"
         relative_residual_tol = 1.0e-12
         max_iterations        = 1
         enable_logging        = FALSE
      }
   }

   PressureHypreSolver {
      solver_type           = "PFMG"
      rap_type              = 0
      relax_type            = 2
      skip_relax            = 1
      num_pre_relax_steps   = 2
      num_post_relax_steps  = 2
      relative_residual_tol = 1.0e-2
      max_iterations        = 100
      enable_logging        = FALSE
   }

   PressureFACSolver {
      num_pre_sweeps  = 0
      num_post_sweeps = 3
      coarse_solver_choice = "hypre"
      coarse_solver_tolerance = 1.0e-12
      coarse_solver_max_iterations = 1
      prolongation_method = "LINEAR_REFINE"
      restriction_method  = "CONSERVATIVE_COARSEN"
      hypre_solver {
         solver_type           = "PFMG"
         rap_type              = 0
         relax_type            = 2
         skip_relax            = 1
         num_pre_relax_steps   = 0
         num_post_relax_steps  = 3
         relative_residual_tol = 1.0e-12
         max_iterations        = 1
         enable_logging        = FALSE
      }
   }
}

Main {
   solver_type = SOLVER_TYPE

// log file parameters
   log_file_name               = "IB2d.log"
   log_all_nodes               = FALSE

// visualization dump parameters
   viz_writer                  = "VisIt" , "ExodusII"
   viz_dump_interval           = int(0.125/DT)              // zero to turn off
   viz_dump_dirname            = "viz_IB2d"
   visit_number_procs_per_file = 1

// restart dump parameters
   restart_dump_interval       = 0                          // zero to turn off
   restart_dump_dirname        = "restart_IB2d"

// hierarchy data dump parameters
   data_dump_interval          = 0                          // zero to turn off
   data_dump_dirname           = "hier_data_IB2d"

// timer dump parameters
   timer_dump_interval         = 0                          // zero to turn off
}

CartesianGeometry {
   domain_boxes = [ (0,0) , (N - 1,N - 1) ]
   x_lo         = 0.0, 0.0         // lower end of computational domain.
   x_up         = 1.0, 1.0         // upper end of computational domain.
   periodic_dimension = 0, 0
}

GriddingAlgorithm {
   max_levels = MAX_LEVELS           // Maximum number of levels in hierarchy.
   ratio_to_coarser {
      level_1 = REF_RATIO,REF_RATIO  // vector ratio to next coarser level
      level_2 = REF_RATIO,REF_RATIO
      level_3 = REF_RATIO,REF_RATIO
      level_4 = REF_RATIO,REF_RATIO
      level_5 = REF_RATIO,REF_RATIO
   }

   largest_patch_size {
      level_0 =512,512 // largest patch allowed in hierarchy
                       // all finer levels will use same values as level_0...
   }

   smallest_patch_size {
      level_0 =  8,  8 // smallest patch allowed in hierarchy
                       // all finer levels will use same values as level_0...
   }

   efficiency_tolerance   = 0.85e0    // min % of tag cells in new patch level
   combine_efficiency     = 0.85e0    // chop box if sum of volumes of smaller
                                      // boxes < efficiency * vol of large box
}

StandardTagAndInitialize {
   tagging_method = "GRADIENT_DETECTOR"
}

LoadBalancer {
   bin_pack_method     = "SPATIAL"
   max_workload_factor = 1
}

TimerManager{
   print_exclusive = FALSE
   print_total = TRUE
   print_threshold = 0.1

   timer_list = "IBAMR::*::*" , "IBTK::*::*" , "*::*::*"
}

SEED = 0                                           // random-number generator seed (0 for clock)
OUTPUT_LEVEL = 2                                   // -1=none, 0=txt, 1=silo+txt, 2=visit+silo+txt, 3=visit+SAMRAI+silo+txt, >3=verbose

// system size
NX = 64                                            // grid size x axis
NY = 64                                            // grid size y axis
N_STEPS = 100                                      // number of time steps

// discretization parameters
H = 1.0                                            // Cartesian grid spacing
DT = 1.0                                           // time step size
PERIODIC_X = 1
PERIODIC_Y = 1

// physical parameters
kT = 1.0                                           // temperature
MU = 1.0                                           // shear viscosity
RHO = 1.0                                          // mass density

// fluctuation parameters
DZ = H                                             // physical thickness of the domain
STD_U = 0.01                                       // scaling of velocity fluctuations (<<1 linearizes the fluctuations)

// solver parameters
DELTA_FUNCTION                = "IB_4"             // name of the delta function (e.g. IB_3 or IB_4)
START_TIME                    = 0.0e0              // initial simulation time
END_TIME                      = N_STEPS            // final simulation time
GROW_DT                       = 1.0e0              // growth factor for timesteps
NUM_CYCLES                    = 1                  // number of cycles of fixed-point iteration
IB_TIME_STEPPING_TYPE         = "MIDPOINT_RULE"    // time stepping rule for IB points
VISCOUS_TIME_STEPPING_TYPE    = "CRANK_NICOLSON"   // viscous time stepping rule
CREEPING_FLOW                 = TRUE               // whether to use the creeping Stokes equations (no v*grad(v) term)
CONVECTIVE_TIME_STEPPING_TYPE = "TRAPEZOIDAL_RULE" // convective time stepping rule (if NUM_CYCLES>1)
CONVECTIVE_OP_TYPE            = "CENTERED"         // convective differencing discretization type
CONVECTIVE_FORM               = "CONSERVATIVE"     // how to compute the convective terms
NORMALIZE_PRESSURE            = TRUE               // whether to explicitly force the pressure to have mean zero
CFL_MAX                       = 0.5                // maximum CFL number
ERROR_ON_DT_CHANGE            = TRUE               // whether to emit an error message if the time step size changes
TAG_BUFFER                    = 1                  // size of tag buffer used by grid generation algorithm
REGRID_CFL_INTERVAL           = 0.5                // regrid whenever any material point could have moved 0.5 meshwidths since previous regrid
OUTPUT_U                      = TRUE
OUTPUT_P                      = FALSE
OUTPUT_F                      = FALSE
OUTPUT_OMEGA                  = FALSE
OUTPUT_DIV_U                  = FALSE
ENABLE_LOGGING                = TRUE

CartesianGeometry {
   domain_boxes = [ (0,0) , (NX - 1,NY - 1) ]
   x_lo         = 0.0 , 0.0          // lower end of computational domain.
   x_up         = NX*H, NY*H         // upper end of computational domain.
   periodic_dimension = PERIODIC_X, PERIODIC_Y
}

GriddingAlgorithm {
   max_levels = 1        // maximum number of levels in hierarchy.

   largest_patch_size {
      level_0 = 512, 512 // largest patch allowed in hierarchy
                         // all finer levels will use same values as level_0...
   }

   smallest_patch_size {
      level_0 =   8,   8 // smallest patch allowed in hierarchy
                         // all finer levels will use same values as level_0...
   }

   efficiency_tolerance   = 0.85e0    // min % of tag cells in new patch level
   combine_efficiency     = 0.85e0    // chop box if sum of volumes of smaller
                                      // boxes < efficiency * vol of large box
}

IBHierarchyIntegrator {
   time_stepping_type  = IB_TIME_STEPPING_TYPE
   start_time          = START_TIME
   end_time            = END_TIME
   grow_dt             = GROW_DT
   num_cycles          = NUM_CYCLES
   regrid_cfl_interval = REGRID_CFL_INTERVAL
   dt_max              = DT
   error_on_dt_change  = ERROR_ON_DT_CHANGE
   tag_buffer          = TAG_BUFFER
   enable_logging      = ENABLE_LOGGING
}

IBMethod {
   delta_fcn      = DELTA_FUNCTION
   enable_logging = ENABLE_LOGGING
}

IBStandardInitializer {
   max_levels = 1
   structure_names = "points2d"  // name of input file(s) to read for structure data (in this case points2d.vertex)
   points2d {
      level_number = max_levels - 1
   }
}

INSStaggeredHierarchyIntegrator {
   mu                            = MU
   rho                           = RHO
   start_time                    = START_TIME
   end_time                      = END_TIME
   grow_dt                       = GROW_DT
   viscous_time_stepping_type    = VISCOUS_TIME_STEPPING_TYPE
   convective_time_stepping_type = CONVECTIVE_TIME_STEPPING_TYPE
   convective_op_type            = CONVECTIVE_OP_TYPE
   convective_difference_form    = CONVECTIVE_FORM
   creeping_flow                 = CREEPING_FLOW
   normalize_pressure            = NORMALIZE_PRESSURE
   cfl                           = CFL_MAX
   dt_max                        = DT
   tag_buffer                    = TAG_BUFFER
   output_U                      = OUTPUT_U
   output_P                      = OUTPUT_P
   output_F                      = OUTPUT_F
   output_Omega                  = OUTPUT_OMEGA
   output_Div_U                  = OUTPUT_DIV_U
   enable_logging                = ENABLE_LOGGING

   VelocityHypreSolver {
      solver_type           = "Split"
      split_solver_type     = "PFMG"
      relative_residual_tol = 1.0e-12
      max_iterations        = 1
      enable_logging        = FALSE
   }

   PressureHypreSolver {
      solver_type           = "PFMG"
      rap_type              = 0
      relax_type            = 2
      skip_relax            = 1
      num_pre_relax_steps   = 2
      num_post_relax_steps  = 2
      relative_residual_tol = 1.0e-2
      max_iterations        = 100
      enable_logging        = FALSE
   }
}

INSStaggeredStochasticForcing {
   stress_tensor_type = "SYMMETRIC"
   velocity_bc_scaling = sqrt(2.0)
   traction_bc_scaling = 0.0
   std = STD_U * sqrt(kT / DZ)
   num_rand_vals = 1
   weights_0 = 1.0
}

LoadBalancer {
   bin_pack_method     = "SPATIAL"
   max_workload_factor = 1
}

Main {
// log file parameters
   log_file_name               = "IB2d.log"
   log_all_nodes               = FALSE

// visualization dump parameters
   viz_writer                  = "VisIt"
   viz_dump_interval           = 10                         // zero to turn off
   viz_dump_dirname            = "viz_IB2d"
   visit_number_procs_per_file = 1

// restart dump parameters
   restart_dump_interval       = 0                          // zero to turn off
   restart_dump_dirname        = "restart_IB2d"

// postprocessing data dump parameters
   data_dump_interval          = 10                         // zero to turn off
   data_dump_dirname           = "data_IB2d"

// timer dump parameters
   timer_dump_interval         = 0                          // zero to turn off
}

StandardTagAndInitialize {
   tagging_method = "GRADIENT_DETECTOR"
}

TimerManager{
   print_exclusive = FALSE
   print_total = TRUE
   print_threshold = 0.1

   timer_list = "IBAMR::*::*" , "IBTK::*::*" , "*::*::*"
}

// NOTE: Boundary condition specifications are not used along periodic boundaries.

VelocityBcCoefs_0 {  // u = 0 along all boundaries
   acoef_function_0 = "1.0"
   acoef_function_1 = "1.0"
   acoef_function_2 = "1.0"
   acoef_function_3 = "1.0"

   bcoef_function_0 = "0.0"
   bcoef_function_1 = "0.0"
   bcoef_function_2 = "0.0"
   bcoef_function_3 = "0.0"

   gcoef_function_0 = "0.0"
   gcoef_function_1 = "0.0"
   gcoef_function_2 = "0.0"
   gcoef_function_3 = "0.0"
}

VelocityBcCoefs_1 {  // v = 0 along all boundaries
   acoef_function_0 = "1.0"
   acoef_function_1 = "1.0"
   acoef_function_2 = "1.0"
   acoef_function_3 = "1.0"

   bcoef_function_0 = "0.0"
   bcoef_function_1 = "0.0"
   bcoef_function_2 = "0.0"
   bcoef_function_3 = "0.0"

   gcoef_function_0 = "0.0"
   gcoef_function_1 = "0.0"
   gcoef_function_2 = "0.0"
   gcoef_function_3 = "0.0"
}

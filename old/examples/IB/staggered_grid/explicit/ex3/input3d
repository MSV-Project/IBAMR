// physical parameters
L = 10.0                                  // length of computational domain (cm)
RHO = 1.0                                 // fluid density (g/cm^3)
MU = 0.01                                 // fluid viscosity (g/cm*s)

// numerical parameters
NUM_LEVELS = 3                            // number of levels in locally refined grid
REF_RATIO  = 4                            // refinement ratio between levels
NFINEST = 256                             // finest   grid spacing
N = NFINEST/(REF_RATIO^(NUM_LEVELS - 1))  // coarsest grid spacing
DT = 1.0e-1*64.0/NFINEST                  // timestep size (s)    --- 1.0e-1 s at NFINEST = 64
W = 4.0 * NFINEST / 64.0                  // delta function width --- 4        at NFINEST = 64

VelocityInitialConditions {
   function_0 = "0.0"
   function_1 = "0.0"
   function_2 = "0.0"
}

IBStaggeredHierarchyIntegrator {
   start_time            = 0.0e0    // initial simulation time
   end_time              = 500.0e0  // final simulation time
   grow_dt               = 2.0e0    // growth factor for timesteps
   max_integrator_steps  = 10000000 // max number of simulation timesteps
   regrid_interval       = 1
   dt_max = DT
   num_cycles = 2
   delta_fcn = "USER_DEFINED"
   enable_logging = TRUE
   using_orthonormal_directors = TRUE
}

IBStandardInitializer {
   max_levels = NUM_LEVELS
   structure_names = "curve3d_64"
   curve3d_64 {
      level_number = NUM_LEVELS - 1  // assign the structure to the finest level of the AMR patch hierarchy
   }
}

INSStaggeredHierarchyIntegrator {
   enable_logging = TRUE

   cfl = 0.5

   tag_buffer = 1 , int(ceil(W/8))  // tag buffer is 1 on level 0; W/8 on level 1

   convective_difference_form = "ADVECTIVE"
   using_vorticity_tagging = FALSE

   output_U = TRUE
   output_P = TRUE
   output_F = TRUE
   output_Omega = TRUE
   output_Div_U = FALSE

   mu  = MU
   rho = RHO

   normalize_pressure = TRUE

   HelmholtzHypreSolver {
      solver_type           = "Split"
      split_solver_type     = "PFMG"
      relative_residual_tol = 1.0e-12
      max_iterations        = 1
      enable_logging        = FALSE
   }

   HelmholtzFACSolver {
      num_pre_sweeps  = 2
      num_post_sweeps = 2
      coarse_solver_choice = "block_jacobi"
      coarse_solver_tolerance = 1.0e-12
      coarse_solver_max_iterations = 2
      prolongation_method = "CONSTANT_REFINE"
      restriction_method  = "CONSERVATIVE_COARSEN"
   }

   PoissonHypreSolver {
      solver_type           = "PFMG"
      rap_type              = 0
      relax_type            = 2
      skip_relax            = 0
      num_pre_relax_steps   = 2
      num_post_relax_steps  = 2
      relative_residual_tol = 1.0e-12
      max_iterations        = 1
      enable_logging        = FALSE
   }

   PoissonFACSolver {
      num_pre_sweeps  = 0
      num_post_sweeps = 2
      coarse_solver_choice = "hypre"
      coarse_solver_tolerance = 1.0e-12
      coarse_solver_max_iterations = 1
      prolongation_method = "LINEAR_REFINE"
      restriction_method  = "CONSERVATIVE_COARSEN"
      hypre_solver {
         solver_type           = "PFMG"
         rap_type              = 0
         relax_type            = 2
         skip_relax            = 0
         num_pre_relax_steps   = 2
         num_post_relax_steps  = 2
         relative_residual_tol = 1.0e-12
         max_iterations        = 1
         enable_logging        = FALSE
      }
   }
}

Main {
// log file parameters
   log_file_name    = "IB3d.log"
   log_all_nodes    = FALSE

// visualization dump parameters
   viz_writer            = "VisIt"
   viz_dump_interval     = 16*NFINEST/64  // zero to turn off
   viz_dump_dirname      = "viz_IB3d"
   visit_number_procs_per_file = 1

// restart dump parameters
   restart_interval      = 0              // zero to turn off
   restart_write_dirname = "restart_IB3d"

// data dump parameters
   data_dump_interval = 16*NFINEST/64     // zero to turn off
   data_dump_dirname = "data_IB3d"

// timer dump parameters
   timer_dump_interval   = 0              // zero to turn off
}

CartesianGeometry {
   domain_boxes = [ (0,0,0) , (N - 1,N - 1,N - 1) ]
   x_lo         = -0.5*L, -0.5*L, -0.5*L   // lower end of computational domain.
   x_up         =  0.5*L,  0.5*L,  0.5*L   // upper end of computational domain.
   periodic_dimension = 1, 1, 1
}

GriddingAlgorithm {
   max_levels = NUM_LEVELS                     // Maximum number of levels in hierarchy.
   ratio_to_coarser {
      level_1 = REF_RATIO,REF_RATIO,REF_RATIO  // vector ratio to next coarser level
      level_2 = REF_RATIO,REF_RATIO,REF_RATIO
      level_3 = REF_RATIO,REF_RATIO,REF_RATIO
   }

   largest_patch_size {
      level_0 =512,512,512 // largest patch allowed in hierarchy
                           // all finer levels will use same values as level_0...
   }

   smallest_patch_size {
      level_0 =  4,  4,  4 // smallest patch allowed in hierarchy
                           // all finer levels will use same values as level_0...
   }

   proper_nesting_buffer = 1
   allow_patches_smaller_than_minimum_size_to_prevent_overlaps = TRUE
   coalesce_boxes = TRUE
   extend_tags_to_bdry = FALSE

   check_nonrefined_tags = 'e'
   check_overlapping_patches = 'e'

   efficiency_tolerance   = 0.85e0    // min % of tag cells in new patch level
   combine_efficiency     = 0.85e0    // chop box if sum of volumes of smaller
                                      // boxes < efficiency * vol of large box
}

StandardTagAndInitialize {
   tagging_method = "GRADIENT_DETECTOR"
}

LoadBalancer {
   bin_pack_method     = "SPATIAL"
   max_workload_factor = 1
}

TimerManager{
   print_exclusive = FALSE
   print_total = TRUE
   print_threshold = 0.1

   timer_list = "IBAMR::*::*" , "IBTK::*::*" , "*::*::*"
}

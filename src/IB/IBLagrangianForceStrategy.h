#ifndef included_IBLagrangianForceStrategy
#define included_IBLagrangianForceStrategy

// Filename: IBLagrangianForceStrategy.h
// Last modified: <09.May.2008 18:31:22 griffith@box230.cims.nyu.edu>
// Created on 03 May 2005 by Boyce Griffith (boyce@mstu1.cims.nyu.edu)

/////////////////////////////// INCLUDES /////////////////////////////////////

// IBTK INCLUDES
#include <ibtk/LNodeLevelData.h>
#include <ibtk/LDataManager.h>

// SAMRAI INCLUDES
#include <PatchHierarchy.h>
#include <tbox/DescribedClass.h>
#include <tbox/Pointer.h>

/////////////////////////////// CLASS DEFINITION /////////////////////////////

namespace IBAMR
{
/*!
 * \brief Class IBLagrangianForceStrategy provides a generic interface for
 * specifying nodal forces (\em not force densities!) on the Lagrangian
 * curvilinear mesh.
 *
 * \note Implementations of class IBLagrangianForceStrategy must compute the
 * total nodal forces.  In particular, they \em must \em not compute the nodal
 * force densities.
 *
 * \see IBBeamForceGen
 * \see IBLagrangianForceStrategySet
 * \see IBSpringForceGen
 * \see IBStandardForceGen
 * \see IBTargetPointForceGen
 */
class IBLagrangianForceStrategy
    : public virtual SAMRAI::tbox::DescribedClass
{
public:
    /*!
     * \brief Default constructor.
     */
    IBLagrangianForceStrategy();

    /*!
     * \brief Virtual destructor.
     */
    virtual
    ~IBLagrangianForceStrategy();

    /*!
     * \brief Set the current and new times for the present timestep.
     *
     * \note A default empty implementation is provided.
     */
    virtual void
    setTimeInterval(
        const double current_time,
        const double new_time);

    /*!
     * \brief Setup the data needed to compute the curvilinear force on the
     * specified level of the patch hierarchy.
     *
     * \note A default empty implementation is provided.
     */
    virtual void
    initializeLevelData(
        const SAMRAI::tbox::Pointer<SAMRAI::hier::PatchHierarchy<NDIM> > hierarchy,
        const int level_number,
        const double init_data_time,
        const bool initial_time,
        IBTK::LDataManager* const lag_manager);

    /*!
     * \brief Compute the curvilinear force generated by the given configuration
     * of the curvilinear mesh.
     *
     * \note Nodal forces computed by implementations of this method must be \em
     * added to the force vector.
     */
    virtual void
    computeLagrangianForce(
        SAMRAI::tbox::Pointer<IBTK::LNodeLevelData> F_data,
        SAMRAI::tbox::Pointer<IBTK::LNodeLevelData> X_data,
        const SAMRAI::tbox::Pointer<SAMRAI::hier::PatchHierarchy<NDIM> > hierarchy,
        const int level_number,
        const double data_time,
        IBTK::LDataManager* const lag_manager) = 0;

    /*!
     * \brief Compute the Jacobian of the force with respect to the present
     * structure configuration.
     *
     * \note The elements of the Jacobian should be "accumulated" in the
     * provided matrix J.
     *
     * \note A default implementation is provided with results in an assertion
     * failure for structures for which no Jacobian is available.
     */
    virtual void
    computeLagrangianForceJacobian(
        Mat& J_mat,
        SAMRAI::tbox::Pointer<IBTK::LNodeLevelData> X_data,
        const SAMRAI::tbox::Pointer<SAMRAI::hier::PatchHierarchy<NDIM> > hierarchy,
        const int level_number,
        const double data_time,
        IBTK::LDataManager* const lag_manager);

private:
    /*!
     * \brief Copy constructor.
     *
     * \note This constructor is not implemented and should not be used.
     *
     * \param from The value to copy to this object.
     */
    IBLagrangianForceStrategy(
        const IBLagrangianForceStrategy& from);

    /*!
     * \brief Assignment operator.
     *
     * \note This operator is not implemented and should not be used.
     *
     * \param that The value to assign to this object.
     *
     * \return A reference to this object.
     */
    IBLagrangianForceStrategy&
    operator=(
        const IBLagrangianForceStrategy& that);
};
}// namespace IBAMR

/////////////////////////////// INLINE ///////////////////////////////////////

//#include <ibamr/IBLagrangianForceStrategy.I>

//////////////////////////////////////////////////////////////////////////////

#endif //#ifndef included_IBLagrangianForceStrategy

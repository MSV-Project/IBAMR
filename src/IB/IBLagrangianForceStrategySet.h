#ifndef included_IBLagrangianForceStrategySet
#define included_IBLagrangianForceStrategySet

// Filename: IBLagrangianForceStrategySet.h
// Created on 04 April 2007 by Boyce Griffith (griffith@box221.cims.nyu.edu)
// Last modified: <16.Apr.2007 02:40:46 boyce@trasnaform2.local>

/////////////////////////////// INCLUDES /////////////////////////////////////

// IBAMR INCLUDES
#include <ibamr/IBLagrangianForceStrategy.h>

/////////////////////////////// CLASS DEFINITION /////////////////////////////

namespace IBAMR
{
/*!
 * \brief Class IBLagrangianForceStrategySet is a utility class that allows
 * multiple IBLagrangianForceStrategy objects to be employed by a single
 * IBHierarchyIntegrator.
 */
class IBLagrangianForceStrategySet
    : public IBLagrangianForceStrategy
{
public:
    /*!
     * \brief Constructor.
     */
    template<typename InputIterator>
    IBLagrangianForceStrategySet(
        InputIterator first,
        InputIterator last)
        : d_strategy_set(first,last)
        {
            // intentionally blank
            return;
        }// IBLagrangianForceStrategySet

    /*!
     * \brief Virtual destructor.
     */
    virtual
    ~IBLagrangianForceStrategySet();

    /*!
     * \brief Set the current and new times for the present timestep.
     */
    virtual void
    setTimeInterval(
        const double current_time,
        const double new_time);

    /*!
     * \brief Setup the data needed to compute the forces on the specified level
     * of the patch hierarchy.
     */
    virtual void
    initializeLevelData(
        const SAMRAI::tbox::Pointer<SAMRAI::hier::PatchHierarchy<NDIM> > hierarchy,
        const int level_number,
        const double init_data_time,
        const bool initial_time,
        LDataManager* const lag_manager);

    /*!
     * \brief Compute the force generated by the Lagrangian structure on the
     * specified level of the patch hierarchy.
     *
     * \note Nodal forces computed by this method are \em added to the force
     * vector.
     */
    virtual void
    computeLagrangianForce(
        SAMRAI::tbox::Pointer<LNodeLevelData> F_data,
        SAMRAI::tbox::Pointer<LNodeLevelData> X_data,
        const SAMRAI::tbox::Pointer<SAMRAI::hier::PatchHierarchy<NDIM> > hierarchy,
        const int level_number,
        const double data_time,
        LDataManager* const lag_manager);

private:
    /*!
     * \brief Default constructor.
     *
     * \note This constructor is not implemented and should not be used.
     */
    IBLagrangianForceStrategySet();

    /*!
     * \brief Copy constructor.
     *
     * \note This constructor is not implemented and should not be used.
     *
     * \param from The value to copy to this object.
     */
    IBLagrangianForceStrategySet(
        const IBLagrangianForceStrategySet& from);

    /*!
     * \brief Assignment operator.
     *
     * \note This operator is not implemented and should not be used.
     *
     * \param that The value to assign to this object.
     *
     * \return A reference to this object.
     */
    IBLagrangianForceStrategySet&
    operator=(
        const IBLagrangianForceStrategySet& that);

    /*!
     * \brief The set of IBLagragianForceStrategy objects.
     */
    std::vector<SAMRAI::tbox::Pointer<IBLagrangianForceStrategy> > d_strategy_set;
};
}// namespace IBAMR

/////////////////////////////// INLINE ///////////////////////////////////////

//#include <ibamr/IBLagrangianForceStrategySet.I>

//////////////////////////////////////////////////////////////////////////////

#endif //#ifndef included_IBLagrangianForceStrategySet

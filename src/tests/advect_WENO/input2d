// constants
PI = 3.141592653589793e+00

// grid spacing parameters
MAX_LEVELS = 1   // maximum number of levels in locally refined grid
REF_RATIO  = 2   // refinement ratio between levels

N = 128                                   // coarsest grid spacing
NFINEST = (REF_RATIO^(MAX_LEVELS - 1))*N  // finest   grid spacing

WENOMOLOps {
   init_type = "ZALESAK"
   kappa = 0.001
}

LocationIndexRobinBcCoefs {
   boundary_0 = "value", "0.0"  // x lower boundary
   boundary_1 = "value", "0.0"  // x upper boundary
   boundary_2 = "value", "0.0"  // y lower boundary
   boundary_3 = "value", "0.0"  // y upper boundary
}

MethodOfLinesIntegrator {
   order = 3
}

Main {
   start_time            = 0.0e0    // initial simulation time
   end_time              = 1.0e0    // final simulation time
   grow_dt               = 2.0e0    // growth factor for timesteps
   max_integrator_steps  = 10000    // max number of simulation timesteps

// log file parameters
   log_file_name    = "advect2d.log"
   log_all_nodes    = FALSE

// visualization dump parameters
   viz_writer            = "VisIt"
   viz_dump_interval     = 32         // zero to turn off
   viz_dump_dirname      = "viz_advect2d"
   visit_number_procs_per_file = 1

// restart dump parameters
   restart_interval      = 0           // zero to turn off
   restart_write_dirname = "restart_advect2d"

// application parameters
   timestepping = "REFINED"
   u_is_div_free = TRUE
   consv_form = TRUE
}

CartesianGeometry {
   domain_boxes = [ (0,0) , (N - 1,N - 1) ]
   x_lo         =  0, 0          // lower end of computational domain.
   x_up         =  1, 1          // upper end of computational domain.
   periodic_dimension = 1, 1
}

GriddingAlgorithm {
   allow_patches_smaller_than_ghostwidth = TRUE

   max_levels = MAX_LEVELS           // Maximum number of levels in hierarchy.
   ratio_to_coarser {
      level_1 = REF_RATIO,REF_RATIO  // vector ratio to next coarser level
      level_2 = REF_RATIO,REF_RATIO
      level_3 = REF_RATIO,REF_RATIO
   }

   largest_patch_size {
      level_0 =512,512 // largest patch allowed in hierarchy
                       // all finer levels will use same values as level_0...
   }

   smallest_patch_size {
      level_0 =  4,  4 // smallest patch allowed in hierarchy
                       // all finer levels will use same values as level_0...
   }

   efficiency_tolerance   = 0.85e0    // min % of tag cells in new patch level
   combine_efficiency     = 0.85e0    // chop box if sum of volumes of smaller
                                      // boxes < efficiency * vol of large box
}

StandardTagAndInitialize {
   tagging_method = "GRADIENT_DETECTOR"
}

LoadBalancer {
   bin_pack_method     = "SPATIAL"
   max_workload_factor = 1
}

TimerManager{
   print_exclusive = FALSE
   print_total = TRUE
   print_threshold = 0.1

   timer_list = "IBAMR::*::*" , "STOOLS::*::*" , "*::*::*"
}
